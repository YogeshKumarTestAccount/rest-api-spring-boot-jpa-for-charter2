server.port=5000
management.port=4000
endpoints.info.id=info
endpoints.info.sensitive=false
endpoints.info.enabled=true
info.app.name=Spring Actuator Example
info.app.description=Spring Actuator Working Examples
#info.app.version=0.0.1-SNAPSHOT




#We can Set none, validate, update, create-drop 
# If this was actually a production database, you probably would want to use validate not other.
 spring.jpa.hibernate.ddl-auto=update
 
 #Enable SQL Statement to generate into the console
 spring.jpa.show-sql=true
 spring.jpa.properties.hibernate.format_sql=true
 spring.jpa.generate-ddl=true
 
 #Disabled Security to Access Actuator Functionality
 management.security.enabled=false
 
 
 #Log Generated Default with INFO Lavel. we can change it with Warn,TRACE,DEBUG,Error etc. 
#logging.level.root=Info
#Setting the Log lavel to Specific Module
#logging.level.org.springframework.web=error
#logging.level.org.hibernate: DEBUG
#Setting the log lavel to our Project lavel

#logging.level.com.com.charter.com.charter.springboot=DEBUG
#logging.level.com.com.charter.com.charter.springboot.com.charter.springboot.RestApiSpringBootForCharterApplication==DEBUG

#Setting the Logging pattern which you want for the console
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Setting the Logging pattern which you want to the log file
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

#Creating the logs inside the Project 
logging.path=logs

#Creating the logs inside the dir. 
#logging.file=D://application-debug.log
#Getting the Logs with color 
spring.output.ansi.enabled=always
